{
  "src": {
    "api": {
      "database": {
        "artist_repository.rs": "Repository functions for artist-related operations",
        "connection.rs": "MySQL database connection setup",
        "playlist_repository.rs": "Repository functions for playlist-related operations",
        "preference_repository.rs": "Repository functions for user song preference-related operations",
        "song_repository.rs": "Repository functions for song-related operations",
        "user_repository.rs": "Repository functions for user-related operations"
      },
      "handlers": {
        "artist_handler.rs": "Handler functions for artist-related endpoints",
        "follow_handler.rs": "Handler functions for artist follow-related endpoints",
        "playlist_handler.rs": "Handler functions for playlist-related endpoints",
        "preference_handler.rs": "Handler functions for user song preference-related endpoints",
        "song_handler.rs": "Handler functions for song-related endpoints",
        "user_handler.rs": "Handler functions for user-related endpoints"
      },
      "middleware": {
        "auth_middleware.rs": "Authentication middleware for validating access tokens"
      },
      "models": {
        "artist.rs": "Artist model struct",
        "playlist.rs": "Playlist model struct",
        "preference.rs": "User song preference model struct",
        "song.rs": "Song model struct",
        "user.rs": "User model struct"
      },
      "routes.rs": "API routes and endpoint mappings"
    },
    "config.rs": "Configuration file for the API service",
    "main.rs": "Main entry point of the API service",
    "utils": {
      "constants.rs": "Constant values used in the API service",
      "error.rs": "Custom error types and error handling utilities",
      "response.rs": "Utility functions for generating API responses"
    }
  }
}