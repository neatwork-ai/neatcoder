{
  "src": {
    "database": {
      "db.rs": "Provides functions for interacting with the MySQL database.",
      "schema.rs": "Defines the database schema and tables using the Diesel ORM."
    },
    "errors.rs": "Defines custom error types and error handling functions.",
    "handlers": {
      "artist_handler.rs": "Handles artist-related API endpoints (retrieve artists, get artist details).",
      "follow_handler.rs": "Handles artist follow-related API endpoints (follow, unfollow, retrieve followed artists).",
      "playlist_handler.rs": "Handles playlist-related API endpoints (create, retrieve, update, delete playlists).",
      "preference_handler.rs": "Handles user song preference-related API endpoints (like, unlike, retrieve liked songs, retrieve recently played songs).",
      "song_handler.rs": "Handles song-related API endpoints (retrieve songs, get song details).",
      "user_handler.rs": "Handles user-related API endpoints (registration, login)."
    },
    "main.rs": "Main entry point of the Rust application.",
    "middleware": {
      "auth.rs": "Implements the authentication middleware for validating access tokens."
    },
    "models": {
      "artist.rs": "Defines the Artist struct and related database operations.",
      "follow.rs": "Defines the Follow struct and related database operations.",
      "playlist.rs": "Defines the Playlist struct and related database operations.",
      "preference.rs": "Defines the Preference struct and related database operations.",
      "song.rs": "Defines the Song struct and related database operations.",
      "user.rs": "Defines the User struct and related database operations."
    },
    "utils.rs": "Contains utility functions used throughout the application."
  }
}